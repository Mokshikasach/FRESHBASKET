{"ast":null,"code":"var _jsxFileName = \"E:\\\\Abhinav\\\\CDAC Project Final\\\\Project\\\\Fresh_Basket_Frontend\\\\src\\\\Components\\\\Razorpay.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nimport { SERVER_BASE_URL } from \"../config\";\nimport Payment from \"./Payment\";\nimport { useStateValue } from \"./StateProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar flag = false;\n\nfunction Razorpay() {\n  _s();\n\n  const {\n    amount\n  } = useParams();\n  const [{\n    user,\n    basket\n  }] = useStateValue();\n  const [email, setEmail] = useState();\n  const resp = JSON.parse(localStorage.getItem(\"data\"));\n  const id = resp.id;\n  axios.get(SERVER_BASE_URL + `/users/${id}`).then(res => {\n    const result = res.data;\n    console.log(result.email);\n    setEmail(result.email);\n  }).catch(error => {\n    console.log(error);\n  });\n  const email_req = {\n    recipient: email,\n    msgBody: \"Your Order Placed!!!\"\n  };\n\n  const sendEmail = () => {\n    if (flag) {\n      axios.post(SERVER_BASE_URL + \"/sendMail\", email_req).then(response => {\n        const result = response.data;\n        console.log(result);\n        alert(\"Email Send to Your Registered Email-ID !!!\");\n        setTimeout(() => {\n          basket.length = 0;\n        }, 1000);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const navigate = useNavigate();\n  var payment_Amount = {\n    create: \"Created\",\n    amount: amount,\n    userId: user.id\n  };\n\n  const pay = () => {\n    axios.post(SERVER_BASE_URL + \"/payment/order\", payment_Amount).then(response => {\n      const result = response.data;\n      console.log(result);\n\n      if (result.status === \"created\") {\n        const options = {\n          key: \"rzp_test_E4MkK7Plh7O8qI\",\n          currency: result.currency,\n          amount: result.amount,\n          name: \"Fresh-Cart Payment\",\n          description: \"Test Wallet Transaction\",\n          image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSW1IdZmFeT9m-QJaiO0c8rveBMFaPdhQIydg&usqp=CAU\",\n          order_id: result.id,\n          handler: function (response) {\n            console.log(response.razorpay_payment_id);\n            console.log(response.razorpay_order_id);\n            console.log(response.razorpay_signature);\n            updatePaymentOnServer(response.razorpay_payment_id, response.razorpay_order_id, \"paid\");\n            flag = true;\n            sendEmail();\n          },\n          prefill: {\n            name: \"\",\n            email: \"\",\n            contact: \"\"\n          }\n        };\n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const loadScript = src => {\n    return new Promise(resolve => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n\n      script.onload = () => {\n        resolve(true);\n      };\n\n      script.onerror = () => {\n        resolve(false);\n      };\n\n      document.body.appendChild(script);\n    });\n  };\n\n  useEffect(() => {\n    loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n  });\n\n  const updatePaymentOnServer = (payment_id, order_id, payment_status) => {\n    var update_req = {\n      payment_id: payment_id,\n      order_id: order_id,\n      payment_status: payment_status\n    };\n    axios.post(SERVER_BASE_URL + \"/payment/order/update\", update_req).then(response => {\n      const result = response.data;\n      console.log(result);\n      alert(\"Payment Successfull!!!\");\n      setTimeout(() => {\n        basket.length = 0;\n        navigate(\"/home\");\n      }, 1000);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Payment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-info  \",\n      onClick: pay,\n      children: [\" \", \"Proceed To Payment GateWay\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Razorpay, \"HRf8AG4sINN7ZSLRzFc8YGXR2tQ=\", false, function () {\n  return [useParams, useStateValue, useNavigate];\n});\n\n_c = Razorpay;\nexport default Razorpay;\n\nvar _c;\n\n$RefreshReg$(_c, \"Razorpay\");","map":{"version":3,"names":["axios","React","useState","useEffect","useNavigate","useParams","Button","SERVER_BASE_URL","Payment","useStateValue","flag","Razorpay","amount","user","basket","email","setEmail","resp","JSON","parse","localStorage","getItem","id","get","then","res","result","data","console","log","catch","error","email_req","recipient","msgBody","sendEmail","post","response","alert","setTimeout","length","navigate","payment_Amount","create","userId","pay","status","options","key","currency","name","description","image","order_id","handler","razorpay_payment_id","razorpay_order_id","razorpay_signature","updatePaymentOnServer","prefill","contact","paymentObject","window","open","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","payment_id","payment_status","update_req"],"sources":["E:/Abhinav/CDAC Project Final/Project/Fresh_Basket_Frontend/src/Components/Razorpay.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\nimport { SERVER_BASE_URL } from \"../config\";\r\nimport Payment from \"./Payment\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nvar flag = false;\r\nfunction Razorpay() {\r\n  const { amount } = useParams();\r\n  const [{ user, basket }] = useStateValue();\r\n\r\n  const [email, setEmail] = useState();\r\n\r\n  const resp = JSON.parse(localStorage.getItem(\"data\"));\r\n  const id = resp.id;\r\n\r\n  axios\r\n    .get(SERVER_BASE_URL + `/users/${id}`)\r\n    .then((res) => {\r\n      const result = res.data;\r\n      console.log(result.email);\r\n      setEmail(result.email);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n  const email_req = {\r\n    recipient: email,\r\n    msgBody: \"Your Order Placed!!!\",\r\n  };\r\n\r\n  const sendEmail = () => {\r\n    if (flag) {\r\n      axios\r\n        .post(SERVER_BASE_URL + \"/sendMail\", email_req)\r\n        .then((response) => {\r\n          const result = response.data;\r\n          console.log(result);\r\n\r\n          alert(\"Email Send to Your Registered Email-ID !!!\");\r\n          setTimeout(() => {\r\n            basket.length = 0;\r\n          }, 1000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  var payment_Amount = {\r\n    create: \"Created\",\r\n    amount: amount,\r\n    userId: user.id,\r\n  };\r\n\r\n  const pay = () => {\r\n    axios\r\n      .post(SERVER_BASE_URL + \"/payment/order\", payment_Amount)\r\n      .then((response) => {\r\n        const result = response.data;\r\n        console.log(result);\r\n\r\n        if (result.status === \"created\") {\r\n          const options = {\r\n            key: \"rzp_test_E4MkK7Plh7O8qI\",\r\n            currency: result.currency,\r\n            amount: result.amount,\r\n            name: \"Fresh-Cart Payment\",\r\n            description: \"Test Wallet Transaction\",\r\n            image:\r\n              \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSW1IdZmFeT9m-QJaiO0c8rveBMFaPdhQIydg&usqp=CAU\",\r\n            order_id: result.id,\r\n            handler: function (response) {\r\n              console.log(response.razorpay_payment_id);\r\n              console.log(response.razorpay_order_id);\r\n              console.log(response.razorpay_signature);\r\n\r\n              updatePaymentOnServer(\r\n                response.razorpay_payment_id,\r\n                response.razorpay_order_id,\r\n                \"paid\"\r\n              );\r\n              flag = true;\r\n              sendEmail();\r\n            },\r\n            prefill: {\r\n              name: \"\",\r\n              email: \"\",\r\n              contact: \"\",\r\n            },\r\n          };\r\n\r\n          const paymentObject = new window.Razorpay(options);\r\n          paymentObject.open();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const loadScript = (src) => {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = src;\r\n      script.onload = () => {\r\n        resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n        resolve(false);\r\n      };\r\n      document.body.appendChild(script);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\r\n  });\r\n\r\n  const updatePaymentOnServer = (payment_id, order_id, payment_status) => {\r\n    var update_req = {\r\n      payment_id: payment_id,\r\n      order_id: order_id,\r\n      payment_status: payment_status,\r\n    };\r\n    axios\r\n      .post(SERVER_BASE_URL + \"/payment/order/update\", update_req)\r\n      .then((response) => {\r\n        const result = response.data;\r\n        console.log(result);\r\n\r\n        alert(\"Payment Successfull!!!\");\r\n        setTimeout(() => {\r\n          basket.length = 0;\r\n          navigate(\"/home\");\r\n        }, 1000);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Payment />\r\n      <Button className=\"btn btn-info  \" onClick={pay}>\r\n        {\" \"}\r\n        Proceed To Payment GateWay\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Razorpay;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}